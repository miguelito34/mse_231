result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
print(roll_count)
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
# total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
print(c(dice, roll_count))
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
# total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
print(c(dice, roll_count))
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
# total_rolls / n_sim
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
dice <- find_conditioned_dice()
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
print(c(dice, roll_count))
roll_count
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
dice <- find_conditioned_dice()
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
print(c(dice, roll_count))
roll_count
dice <- find_conditioned_dice()
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
roll_count <- 0
result <- 0
dice
result <- sample(dice, 1, replace = TRUE)
sample(dice, 1, replace = TRUE)
dice
c(5)
?sample
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (dice == 6) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
print(c(dice, roll_count))
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (dice == 6) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (dice == 6) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e2
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
?return()
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice_2 <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
length(whole_roll)
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + find_conditioned_dice_2()
}
total_rolls / n_sim
knitr::opts_chunk$set(echo = TRUE)
n_sim <- 1e5
norm_dice <- c(1, 2, 3, 4, 5, 6)
total_rolls <- 0
find_conditioned_dice <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
whole_roll
}
roll_dice <- function() {
dice <- find_conditioned_dice()
if (length(dice) == 1) {
roll_count = 1
} else {
roll_count <- 0
result <- 0
while (result != 6) {
result <- sample(dice, 1, replace = TRUE)
roll_count <- roll_count + 1
}
}
roll_count
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + roll_dice()
}
total_rolls / n_sim
find_conditioned_dice_2 <- function() {
whole_roll = integer()
trip = FALSE
while (!trip) {
roll <- sample(norm_dice, 1, replace = TRUE)
if (roll %in% c(1, 3, 5)) {
whole_roll = integer()
} else {
whole_roll = c(whole_roll, roll)
}
if (roll == 6) trip = TRUE
}
length(whole_roll)
}
for (i in 1:n_sim) {
total_rolls <- total_rolls + find_conditioned_dice_2()
}
total_rolls / n_sim
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
source('~/Stanford Coding/mse_231/mse231_a0/mse231-a0.R', echo=TRUE)
